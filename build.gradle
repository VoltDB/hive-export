/*
 * The MIT License (MIT)
 *
 * Copyright (C) 2008-2015 VoltDB Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

plugins {
  id 'groovy'
  id 'java'
  id 'eclipse'
  id 'com.github.johnrengelman.shadow' version '1.2.1'
}

description = 'VoltDB Hive export conduit'
version='1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    voltlib
    export
}

def volt = fileTree(dir: "${voltdbhome}/voltdb", include: 'voltdb-*.jar')

dependencies {
    voltlib volt
    voltlib ('commons-logging:commons-logging:1.1.3') { transitive = true }
    voltlib ('commons-codec:commons-codec:1.6') { transitive = true }
    voltlib ('commons-cli:commons-cli:1.2') { transitive = true }
    voltlib ('org.codehaus.jackson:jackson-core-asl:1.9.13') { transitive = true }
    voltlib ('log4j:log4j:1.2.17') { transitive = true }
    voltlib ('jline:jline:2.12') { transitive = true }
    voltlib ('org.slf4j:slf4j-log4j12:1.7.6') {
        transitive = true
        exclude group:'log4j'
    }

    export ('commons-pool:commons-pool:1.6') { transitive = true }
    export ('commons-collections:commons-collections:3.2.1') { transitive = true }
    export ('commons-lang:commons-lang:2.6') { transitive = true }
    export ('commons-io:commons-io:2.4') { transitive = true }
    export ('org.antlr:antlr-runtime:3.4') { transitive = true }
    export ('com.google.code.findbugs:jsr305:3.0.0') { transitive = true }
    export ('org.antlr:antlr-runtime:3.4') { transitive = true }
    export ('org.apache.commons:commons-compress:1.4.1') { transitive = true }
    export ('com.google.guava:guava:latest.release') { transitive = true }

    export ('commons-configuration:commons-configuration:1.6') {
        transitive = true
        exclude group:'commons-logging'
        exclude group:'commons-collections'
        exclude group:'commons-lang'
        exclude group:'commons-digester'
        exclude group:'commons-beanutils'
    }
    export ('commons-dbcp:commons-dbcp:1.4') {
        transitive = true
        exclude group:'commons-pool'
    }

    export 'org.apache.hadoop:hadoop-auth:2.3.0@jar'
    export 'org.apache.hadoop:hadoop-common:2.3.0@jar'
    export 'org.apache.hadoop:hadoop-hdfs:2.3.0@jar'
    export 'org.apache.hadoop:hadoop-mapreduce-client-core:2.3.0@jar'
    export 'org.apache.hive.hcatalog:hive-hcatalog-core:1.1.0@jar'
    export 'org.apache.hive.hcatalog:hive-hcatalog-streaming:1.1.0@jar'
    export 'org.apache.hive:hive-cli:1.1.0@jar'
    export 'org.apache.hive:hive-common:1.1.0@jar'
    export 'org.apache.hive:hive-exec:1.1.0@jar'
    export 'org.apache.hive:hive-metastore:1.1.0@jar'
    export 'org.apache.thrift:libfb303:0.9.2@jar'

    compile configurations.export
    compile configurations.voltlib

    testCompile ('org.spockframework:spock-core:1.0-groovy-2.3') {
        exclude group:'org.hamcrest'
        exclude group:'junit'
    }
    testCompile ('junit:junit:latest.release') {
        exclude group:'org.hamcrest'
    }
    testCompile 'org.hamcrest:java-hamcrest:latest.release'
    testCompile ('org.hamcrest:hamcrest-junit:latest.release') {
        exclude group:'junit'
    }
    testCompile ('org.mockito:mockito-core:latest.release') {
        exclude group:'org.hamcrest'
    }
    testRuntime 'cglib:cglib-nodep:3.1'
    testRuntime 'org.objenesis:objenesis:2.1'
}

shadowJar {
    mergeServiceFiles()
    configurations = [project.configurations.export]
}
